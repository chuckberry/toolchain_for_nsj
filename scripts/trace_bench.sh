#!/bin/bash

if [ x$INIT_SOURCE == "x" ]; then
	echo "export INIT_SOURCE like environment variable"
	exit 1;	
fi

if [ ! -f $INIT_SOURCE ]; then
	echo "run init_env.sh to select which profile do you want"
	exit 1;
fi

source $INIT_SOURCE
source $FUNC_SOURCE

####################	don't touch here #####################

print_usage() {

cat - <<EOF

Trace benchmark

Run benchmark and measure Average Execution time and 
number of migration of each task

-h 
	help
-b
	binaries of benchmark to use
-i
	number of iteration of performance test in progress
-d
	buffer dimension used to perform benchmark

EOF

}

while getopts "hb:i:d:" optionName; do

	case "$optionName" in
		h) 
			print_usage	
			exit
			;;
		b)
			BENCH="$OPTARG"
			;;
		i)
			ID_BENCH="$OPTARG"
			;;
		d)
			DIM="$OPTARG"
			;;
		\?) 
			print_usage	
			exit
			;;
	esac
done

# Check on input parameters
if [[ x$BENCH == "x" || x$ID_BENCH == "x" || x$DIM == "x" ]]; then
	print_usage
	exit
fi

# --- local variables

MONITOR="${MONITOR_SCHED}_${DIM}KB"
PREFIX="trace_bench_${PER_TASK_TAG}"
PREFIX_BENCH="${PREFIX}_`uname -r`"
NAME_BENCH="${PREFIX_BENCH}_${ID_BENCH}"

# --- produced files
# contais statistics data
STATS_FILE="${PREFIX_BENCH}_stats.txt"

SAMPLES_TIME_PREFIX_TASK="${NAME_BENCH}_${DIM}_samples_time"
IMG_SAMPLES_TIME_PREFIX_TASK="img_${NAME_BENCH}_${DIM}_samples_time"
PERC_FILE_TIME_PREFIX_TASK="${NAME_BENCH}_${DIM}_perc_sample_time"
IMG_PERC_FILE_TIME_PREFIX_TASK="img_${NAME_BENCH}_${DIM}_perc_sample_time"

SAMPLES_SCHED_LAT_PREFIX_TASK="${NAME_BENCH}_${DIM}_samples_sched_lat"
IMG_SAMPLES_SCHED_LAT_PREFIX_TASK="img_${NAME_BENCH}_${DIM}_samples_sched_lat"
PERC_FILE_SCHED_LAT_PREFIX_TASK="${NAME_BENCH}_${DIM}_perc_sched_lat"
IMG_PERC_FILE_SCHED_LAT_PREFIX_TASK="img_${NAME_BENCH}_${DIM}_perc_sched_lat"

# trace file produced by sched_switch tracer
TRACE_FILE="${NAME_BENCH}_${DIM}_trace_file.gz"
TAG="<$NAME_BENCH><$DIM>"

# --- header for graphics 
PREF_AVG="avg"
PREF_SCHED="sched_lat"
PREF_MIGR="migr"	

# header read from local_graphics.sh to build graphic
TITLE_AVG="Avg_Ex_time_(per_task)_KB${DIM}"
XLAB_AVG="T:"
YLAB_AVG="Time_(us)"
PREFIX_BENCH_AVG="${PREF_AVG}_${PREFIX_BENCH}"

TITLE_SCHED="Avg_Sched_lat_(per_task)_KB${DIM}"
XLAB_SCHED="T:"
YLAB_SCHED="Time_(us)"
PREFIX_BENCH_SCHED="${PREF_SCHED}_${PREFIX_BENCH}"

TITLE_MIG="Number_of_migration_(per_task)_KB${DIM}"
XLAB_MIG="T:"
YLAB_MIG="#_migr"
PREFIX_BENCH_MIG="${PREF_MIGR}_${PREFIX_BENCH}"

# --- write header in STATS_FILE and in list for final graphics
touch $DATA_FOLDER/$STATS_FILE

# parameters for "local" graphics construction
HEADER=`cat $DATA_FOLDER/$STATS_FILE | grep "$TITLE_TAG"`
# There could be different header in STATS_FILE but there
# must be only one copy for each header. In this case
# there are two graphics generated by STATS_FILE: one related
# to migration of tasks and other related to exec. time of each task
if [ x"$HEADER" == "x" ]; then
	
	# graphic's title
	echo "#${TITLE_TAG}$TITLE_AVG" >> $DATA_FOLDER/$STATS_FILE
	# label of x axis
	echo "#${XLAB_TAG}$XLAB_AVG" >> $DATA_FOLDER/$STATS_FILE
	# label of y axis
	echo "#${YLAB_TAG}$YLAB_AVG" >> $DATA_FOLDER/$STATS_FILE
	# prefix to use to give a name at "local" graphic
	echo "#${PREFIX_PLOT_TAG}${PREFIX_BENCH_AVG}" >> $DATA_FOLDER/$STATS_FILE
	# index of column that contains average values read by local_graphics.sh
	echo "#${AVG_COL_TAG}${AVG_COL}" >> $DATA_FOLDER/$STATS_FILE
	# index of column that contains variance values read by local_graphics.sh
	echo "#${VAR_COL_TAG}${VAR_COL}" >> $DATA_FOLDER/$STATS_FILE

	echo "#${TITLE_TAG}$TITLE_SCHED" >> $DATA_FOLDER/$STATS_FILE
	echo "#${XLAB_TAG}$XLAB_SCHED" >> $DATA_FOLDER/$STATS_FILE
	echo "#${YLAB_TAG}$YLAB_SCHED" >> $DATA_FOLDER/$STATS_FILE
	echo "#${PREFIX_PLOT_TAG}${PREFIX_BENCH_SCHED}" >> $DATA_FOLDER/$STATS_FILE
	echo "#${AVG_COL_TAG}${AVG_SCHED_COL}" >> $DATA_FOLDER/$STATS_FILE
	echo "#${VAR_COL_TAG}${UNC_SCHED_COL}" >> $DATA_FOLDER/$STATS_FILE
	
	echo "#${TITLE_TAG}${TITLE_MIG}" >> $DATA_FOLDER/$STATS_FILE
	echo "#${XLAB_TAG}${XLAB_MIG}" >> $DATA_FOLDER/$STATS_FILE
	echo "#${YLAB_TAG}${YLAB_MIG}" >> $DATA_FOLDER/$STATS_FILE
	echo "#${PREFIX_PLOT_TAG}${PREFIX_BENCH_MIG}" >> $DATA_FOLDER/$STATS_FILE
	echo "#${AVG_COL_TAG}${MIG_COL}" >> $DATA_FOLDER/$STATS_FILE
	echo "#${VAR_COL_TAG}${MIG_COL}" >> $DATA_FOLDER/$STATS_FILE
fi
 
# read if GLOBAL_LIST has already an entry for each graphic
# that this file want to generate, because an entry in GLOBAL_LIST
# correspond to a "global" graphic
HEADER_GLOBAL_LIST=`cat $TA_RESULTS_PATH/$GLOBAL_LIST | grep ${TITLE_AVG}`
if [ x"$HEADER_GLOBAL_LIST" == "x" ]; then
	echo "${PREF_AVG}_${PREFIX}#$TITLE_AVG#$XLAB_AVG#$YLAB_AVG" >> $TA_RESULTS_PATH/$GLOBAL_LIST
fi
HEADER_GLOBAL_LIST=""

HEADER_GLOBAL_LIST=`cat $TA_RESULTS_PATH/$GLOBAL_LIST | grep ${TITLE_SCHED}`
if [ x"$HEADER_GLOBAL_LIST" == "x" ]; then
	echo "${PREF_SCHED}_${PREFIX}#$TITLE_SCHED#$XLAB_SCHED#$YLAB_SCHED" >> $TA_RESULTS_PATH/$GLOBAL_LIST
fi
HEADER_GLOBAL_LIST=""

HEADER_GLOBAL_LIST=`cat $TA_RESULTS_PATH/$GLOBAL_LIST | grep ${TITLE_MIG}`
if [ x"$HEADER_GLOBAL_LIST" == "x" ]; then
	echo "${PREF_MIGR}_${PREFIX}#$TITLE_MIG#$XLAB_MIG#$YLAB_MIG" >> $TA_RESULTS_PATH/$GLOBAL_LIST
fi

# Run benchmark and monitor to produce Average Exec. time of samples
chrt --fifo $PRIO_BENCH $BENCH | chrt --fifo $PRIO_MONITOR $MONITOR "$NAME_OF_BENCH_TRACED" 

#useless in this benchmark
rm $MONITOR_OUT_TRACE
rm $MONITOR_OUT_HIST

# save and compress debugfs/tracing/trace 
dump_trace > "$DATA_FOLDER/$TRACE_FILE"

# put PER_TASK_STATS value in STATS_FILE tagged with TAG 
# PER_TASK_STATS will have this format:
# 
# Average = %lf Var = %lf Min = %lf Max = %lf
# Where:
# -> Average = mean of values contained in SAMPLES_TIME 
# -> Variance = variance of values ...	 
# -> Max = max of values ...
# -> Min = min of values ...
# -> migr = number of migration of task i-th 

for i in $TASK_LIST
do
	SAMPLE_TIME_TASK="${SAMPLES_TIME_PREFIX_TASK}_$i.txt"
	PERC_FILE_TIME_TASK="${PERC_FILE_TIME_PREFIX_TASK}_$i.txt"
	IMG_SAMPLE_TIME_TASK="${IMG_SAMPLES_TIME_PREFIX_TASK}_$i.png"
	IMG_PERC_FILE_TIME_TASK="${IMG_PERC_FILE_TIME_PREFIX_TASK}_$i.png"
	
	SAMPLE_SCHED_LAT_TASK="${SAMPLES_SCHED_LAT_PREFIX_TASK}_$i.txt"
	PERC_FILE_SCHED_LAT_TASK="${PERC_FILE_SCHED_LAT_PREFIX_TASK}_$i.txt"
	IMG_SAMPLE_SCHED_LAT_TASK="${IMG_SAMPLES_SCHED_LAT_PREFIX_TASK}_$i.png"
	IMG_PERC_FILE_SCHED_LAT_TASK="${IMG_PERC_FILE_SCHED_LAT_PREFIX_TASK}_$i.png"
	
	# compute avg exec time of each task and number of migration
	zcat $DATA_FOLDER/$TRACE_FILE | sed -e '/^#/d' -e 's/: /:/g' | get_task_duration_migr.sh $i > $DATA_FOLDER/$SAMPLE_TIME_TASK
	AVG_FUN=`calc_stat.sh -f "$DATA_FOLDER/$SAMPLE_TIME_TASK" -n 1 -a`
	VAR_FUN=`calc_stat.sh -f "$DATA_FOLDER/$SAMPLE_TIME_TASK" -n 1 -v`

	generate_histogram.sh $DATA_FOLDER/$SAMPLE_TIME_TASK "us" > hist
	COUNT=`cat hist | grep -v "#" | awk '{print $NF}' | (sed -e 's/^/x+=/'; echo "x") | bc`
	generate_percentili.sh hist $COUNT > $DATA_FOLDER/$PERC_FILE_TIME_TASK

	traceplotgif.sh "$DATA_FOLDER/$SAMPLE_TIME_TASK" "$PNG_FOLDER/$IMG_SAMPLE_TIME_TASK" \
				"$i: Avg_Ex_time_`uname -r`"  "Time (us)" "nr_of_sample"
	traceplotgif.sh "$DATA_FOLDER/$PERC_FILE_TIME_TASK" "$PNG_FOLDER/$IMG_PERC_FILE_TIME_TASK" \
				"fdr of task: $i (us) Avg = $AVG_FUN Var = $VAR_FUN `uname -r`"  "Percentage" "Time (ns)"

	# compute avg sched latency of each task
	zcat $DATA_FOLDER/$TRACE_FILE | sed -e '/^#/d' -e 's/: /:/g' | get_task_schedlat.sh $i > $DATA_FOLDER/$SAMPLE_SCHED_LAT_TASK
	
	AVG_FUN=`calc_stat.sh -f "$DATA_FOLDER/$SAMPLE_SCHED_LAT_TASK" -n 1 -a`
	# compute uncertainty
	VAR_FUN=`calc_stat.sh -f "$DATA_FOLDER/$SAMPLE_SCHED_LAT_TASK" -n 1 -u`

	generate_histogram.sh $DATA_FOLDER/$SAMPLE_SCHED_LAT_TASK "us" > hist
	COUNT=`cat hist | grep -v "#" | awk '{print $NF}' | (sed -e 's/^/x+=/'; echo "x") | bc`
	generate_percentili.sh hist $COUNT > $DATA_FOLDER/$PERC_FILE_SCHED_LAT_TASK

	traceplotgif.sh "$DATA_FOLDER/$SAMPLE_SCHED_LAT_TASK" "$PNG_FOLDER/$IMG_SAMPLE_SCHED_LAT_TASK" \
				"$i: Avg_sched_lat_`uname -r`"  "Time (us)" "nr_of_sample"
	traceplotgif.sh "$DATA_FOLDER/$PERC_FILE_SCHED_LAT_TASK" "$PNG_FOLDER/$IMG_PERC_FILE_SCHED_LAT_TASK" \
				"fdr of task: $i (us) Avg = $AVG_FUN Var = $VAR_FUN `uname -r`"  "Percentage" "Time (ns)"

	# statistcs
	NR_MIGR=`cat $DATA_FOLDER/$SAMPLE_TIME_TASK | grep "migr" | awk '{print $NF}'` 
	EXEC_TASK_STATS="Exec_time_stat:`calc_stat.sh -f "$DATA_FOLDER/$SAMPLE_TIME_TASK" -n 1 -l`"
	LAT_TASK_STATS="Sched_lat_stat:`calc_stat.sh -f "$DATA_FOLDER/$SAMPLE_SCHED_LAT_TASK" -n 1 -l`"
	ALL_STATS="$EXEC_TASK_STATS migr = $NR_MIGR $LAT_TASK_STATS"
	
	echo "$TAG<$i>$ALL_STATS" >> $DATA_FOLDER/$STATS_FILE

	# compress files
	gzip $DATA_FOLDER/$SAMPLE_TIME_TASK
	gzip $DATA_FOLDER/$PERC_FILE_TIME_TASK
	gzip $DATA_FOLDER/$SAMPLE_SCHED_LAT_TASK
	gzip $DATA_FOLDER/$PERC_FILE_SCHED_LAT_TASK

done

